:root{
    --width: 80em;
    --height: 60em;
}

body{
    width: 100vw;
    height: 100vh;
    padding: 0;
    margin: 0;
}

div{
    width: 100%;
    height:100%;
}

.pivot{
    width: 0;
    height: 0;
}

.scene {
    position: absolute;
    left: 50vw;
    top: 50vh;
    width: 0%;
    height: 0%;
    perspective: calc(0.5 * (var(--height) + var(--width)));
    overflow: visible;
}

.screen {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.square {
    position: absolute;
    text-align:center;
    line-height: var(--height);
    /* for some reason, font-size controls perspective/zoom too */
    font-size: 0.3em;
    color:#FFF;
}
/* 
.square.backwall {
    width:var(--width);
    height:var(--height);
    transform: translate3d(
        calc( 50vw - (0.5 * var(--width))), 
        calc( 50vh - (0.5 * var(--height))), 
        0em
    );
    background-color: rgb(136, 135, 135);
}

.square.floor {
    width:var(--width);
    height:var(--height);
    transform: translate3d(
        0em, 
        50vh, 
        calc(0.5 * var(--height))
    ) rotateX(90deg);
    background-color: rgb(206, 206, 206);
}

.square.roof {
    width:var(--width);
    height:var(--height);
    transform: translate3d(
        calc( 50vw - (0.5 * var(--width))), 
        calc(50vh - var(--height)), 
        calc(0.5 * var(--height))
    ) rotateX(-90deg);
    background-color: rgb(90, 90, 90);
}

.square.leftwall {
    width:var(--height);
    height:var(--height);
    transform: translate3d(
        calc( 50vw - (0.5 * var(--height)) - (0.5 * var(--width))), 
        calc( 50vh - (0.5 * var(--height))), 
        calc(0.5 * var(--height))
    ) rotateY(90deg);
    background-color: rgb(160, 158, 158);
}

.square.rightwall {
    width:var(--height);
    height:var(--height);
    transform: translate3d(
        calc( 50vw - (0.5 * var(--height)) + (0.5 * var(--width))), 
        calc( 50vh - (0.5 * var(--height))), 
        calc(0.5 * var(--height))
    ) rotateY(-90deg);
    background-color: rgb(160, 158, 158);
} */

.room {
    position: relative;
    transform-style: preserve-3d;
    width: 0;
    height: 0;
    transition: transform 1s ease-in-out;
    transform: translate3d(15em, 0, 0);
    /* animation: slide-left 1s ease-in-out 0s forwards; */
}

.screen:active .room{
    transform: translate3d(-15em, 0, 0);
    /* animation: slide-right 1s ease-in-out 0s forwards; */
}

@keyframes slide-left {
    0% {
        transform: translate3d(15em, 0, 0);
    }
    90%{
        transform: translate3d(-16em, 0, 0);
    }
    100% {
        transform: translate3d(-15em, 0, 0);
    }
  }


@keyframes slide-right {
    0% {
        transform: translate3d(-15em, 0, 0);
    }
    90%{
        transform: translate3d(16em, 0, 0);
    }
    100% {
        transform: translate3d(15em, 0, 0);
    }
  }